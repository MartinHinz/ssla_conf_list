links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# Utility functions, adapted from zackbatist/open-archaeo
cnotna <- function(...) {
x <- c(...)
x[!is.na(x)]
}
clean_slug <- function(x) {
x %>%
tolower() %>%
str_remove(".r$") %>%
str_replace_all(" ", "-") %>%
str_replace_all("_", "-") %>%
str_replace_all(coll("."), "-") %>%
str_replace_all(coll("/"), "-") %>%
str_replace_all("--+", "-")
}
unique_slug <- function(.data) {
if (nrow(.data) > 1) {
.data <- mutate(.data, slug = clean_slug(paste0(slug, "-", author1_name)))
}
if (length(unique(.data$slug)) != length(.data$slug)) {
stop("Couldn't generate unique slugs from ", paste(.data$slug, collapse = ", "))
}
.data$slug
}
generate_post_md <- function(slug, title, Description, ..., path) {
front_matter <- list(title = title, description = Description, ...)
# Preserve some values as singletons
front_matter$title <- unbox(front_matter$title)
front_matter$links <- map(front_matter$links, unbox)
front_matter$date <- front_matter$`StartDate`
front_matter$EndDate <- front_matter$`EndDate`
front_matter <- toJSON(front_matter, auto_unbox	= FALSE, pretty = TRUE)
md <- paste0(front_matter,
"\n\n",
"<!-- Generated by csv2md.R â€“ do not edit by hand -->",
"\n\n",
Description)
file <- paste0(path, slug, ".md")
message("Writing ", file, " ...")
cat(md, file = file)
invisible(file)
}
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
# turning the csv into md files, adapted from zackbatist/open-archaeo
library(glue)
library(stringr)
library(dplyr)
library(purrr)
library(readr)
library(jsonlite)
library(fs)
source("R/site.R")
conf_list <- readr::read_csv("ssla_conf_list.csv")
# Generate URL-friendly, unique slugs (lowercase, without spaces etc.)
conf_list %<>%
mutate(slug = clean_slug(Subject)) %>%
group_by(slug) %>%
mutate(slug = unique_slug(cur_data_all()))
# Merge multiple columns
conf_list %<>%
rowwise() %>%
mutate(
links = list(as.list(cnotna(
Website = `Website URL`,
ProposalURL = `Proposal URL`,
SponsorshipURL = `Sponsorship URL`
))),
StartDate = `Start Date`,
EndDate = `End Date`,
tags = list(cnotna(str_split(Tags,"\\|")))
) %>%
ungroup() %>%
select(slug,
Subject,
Description,
links,
tags,
StartDate,
EndDate,
Location,
Country,
Venue,
`Session Deadline`,
`Talk Deadline`
)
# Generate .md files
conf_list %>%
rename(title = Subject) %>%
pmap(generate_post_md, path = "content/post/") %>%
invisible()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
